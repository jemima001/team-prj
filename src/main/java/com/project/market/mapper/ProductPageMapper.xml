<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.market.mapper.ProductPageMapper">

	<insert id="AddPage" useGeneratedKeys="true" keyColumn="id"
		keyProperty="id">
		INSERT INTO ProductPage (BoardTitle,BoardBody,productId)
		VALUES(#{boardTitle},#{boardBody},#{productId})

	</insert>

	<insert id="Addproduct">
		INSERT INTO Product (name,Stock,price)
		VALUES(#{productName},#{Stock},#{price})
	</insert>

	<select id="getcategory"
		resultType="com.project.market.domain.ProductDto">
		Select id as Product_middle_class , name as middle_name FROM
		Product_middle_class

	</select>

	<select id="getcategory_low"
		resultType="com.project.market.domain.ProductDto">
		SELECT id as Product_low_class , name as low_name
		FROM Product_low_class
		where Product_middle_class = #{Product_middle_class}

	</select>

	<insert id="Addcategory">
		INSERT INTO ProductCode (ProductId, ProductCode0, ProductCode1)
		VALUES(#{productId},#{newProductCode0},#{newProductCode1})
	</insert>

	<select id="getproductId" resultType="int">
		SELECT id as productId FROM Product ORDER BY id DESC LIMIT 1;

	</select>


	<select id="getproductBoard"
		resultType="com.project.market.domain.ProductPageDto">
		SElECT board.id,
		board.BoardTitle as boardTitle,
		board.BoardBody as boardBody,
		board.productId,
		board.inserttime
		FROM ProductPage as board
		WHERE board.id = #{boardId} ;
	</select>

	<select id="getfileList" resultType="string">

		SELECT File.fileName as fileList
		FROM ProductPage as board LEFT JOIN File ON
		board.id = File.boardId
		WHERE board.id = #{id} ;

	</select>

	<select id="getproduct"
		resultType="com.project.market.domain.ProductDto">
		SELECT name as productName,
		price as price,
		Stock
		From Product
		WHERE id =#{productId};

	</select>

	<select id="getBoardlist"
		resultType="com.project.market.domain.ProductPageDto">
		SELECT pp.id as id,
		pp.BoardTitle,
		pp.BoardBody,
		Product.price as priceTopage,
		Product.name as productName,
		pm.name,
		pp.inserttime as inserttime

		FROM ProductPage as pp Join ProductCode as p ON pp.productId = p.Productid
		JOIN Product ON Product.id =pp.productId
		Join Product_middle_class as pm ON p.ProductCode0 = pm.id
		<if test="search != '%%'">
		
		
		<choose>
			<when test="cat== 1">
				WHERE pm.id = 1
				AND pp.BoardTitle LIKE #{search}
			</when>
			<when test="cat== 2">
				WHERE pm.id = 2
				AND pp.BoardTitle LIKE #{search}
			</when>

			<when test="cat== 3">
				WHERE pm.id = 3
				AND pp.BoardTitle LIKE #{search}
			</when>

			<when test="cat== 4">
				WHERE pm.id = 4
				AND pp.BoardTitle LIKE #{search}
			</when>

			<when test="cat== 5">
				WHERE pm.id = 5
				AND pp.BoardTitle LIKE #{search}
			</when>


			<when test="cat== 7">
				WHERE pm.id = 6
				AND pp.BoardTitle LIKE #{search}
			</when>

			<when test="cat== 8">
				WHERE pm.id = 7
				AND pp.BoardTitle LIKE #{search}
			</when>
		</choose>
		WHERE pp.BoardTitle LIKE #{search}
		</if>



	</select>

	<delete id="deleteBoard">
		DELETE FROM ProductPage
		WHERE id = #{id};

	</delete>

	<insert id="insertFile">
		INSERT INTO File (boardId, fileName) VALUES(#{boardId}, #{fileName});
	</insert>

	<update id="updateProduct">
		UPDATE Product
		SET name = #{productName},
		Stock = #{Stock},
		price = #{price}
		WHERE
		id = #{productId};


	</update>
	<update id="updataPage">
		UPDATE ProductPage
		SET BoardTitle = #{boardTitle},
		BoardBody = #{boardBody}
		WHERE
		id = #{id};

	</update>


	<delete id="deleteImg">
		DELETE FROM File
		WHERE boardId = #{id}
		AND fileName = #{fileName}
	</delete>


</mapper>